<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zxtech.manager.dao.function.TAuthFunctionRelationMapper" >
  <resultMap id="BaseResultMap" type="java.util.Map" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="auth_id" property="authId" jdbcType="INTEGER" />
    <result column="function_id" property="functionId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="removed" property="removed" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, auth_id, function_id, create_time, update_time, removed
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_auth_function_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_auth_function_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zxtech.manager.vo.function.TAuthFunctionRelation" >
    insert into t_auth_function_relation (id, auth_id, function_id, 
      create_time, update_time, removed
      )
    values (#{id,jdbcType=INTEGER}, #{authId,jdbcType=INTEGER}, #{functionId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{removed,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxtech.manager.vo.function.TAuthFunctionRelation" >
    insert into t_auth_function_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="functionId != null" >
        function_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="removed != null" >
        removed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="authId != null" >
        #{authId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        #{removed,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxtech.manager.vo.function.TAuthFunctionRelation" >
    update t_auth_function_relation
    <set >
      <if test="authId != null" >
        auth_id = #{authId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        function_id = #{functionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="removed != null" >
        removed = #{removed,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxtech.manager.vo.function.TAuthFunctionRelation" >
    update t_auth_function_relation
    set auth_id = #{authId,jdbcType=INTEGER},
      function_id = #{functionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      removed = #{removed,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>