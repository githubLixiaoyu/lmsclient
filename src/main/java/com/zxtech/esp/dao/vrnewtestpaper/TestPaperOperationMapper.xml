<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zxtech.esp.dao.vrnewtestpaper.TestPaperOperationMapper">
	<resultMap id="BaseResultMap" type="java.util.Map">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="version" property="version" jdbcType="BIGINT" />
		<result column="milestone_id" property="milestoneId" jdbcType="BIGINT" />
		<result column="reference_milestone_id" property="referenceMilestoneId"
			jdbcType="BIGINT" />
		<result column="reference_operation_id" property="referenceOperationId"
			jdbcType="BIGINT" />
		<result column="score" property="score" jdbcType="BIGINT" />
		<result column="sequence_number" property="sequenceNumber"
			jdbcType="BIGINT" />
		<result column="mile_stone_name" property="mileStoneName" jdbcType="VARCHAR" />
		<result column="operation_name" property="operationName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, version, milestone_id, reference_milestone_id,
		reference_operation_id, score,
		sequence_number
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from test_paper_operation
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		test_paper_operation
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation">
		insert into
		test_paper_operation (id, version, milestone_id,
		reference_milestone_id, reference_operation_id,
		score, sequence_number)
		values (#{id,jdbcType=BIGINT}, #{version,jdbcType=BIGINT},
		#{milestoneId,jdbcType=BIGINT},
		#{referenceMilestoneId,jdbcType=BIGINT},
		#{referenceOperationId,jdbcType=BIGINT},
		#{score,jdbcType=BIGINT},
		#{sequenceNumber,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation">
		insert into test_paper_operation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="milestoneId != null">
				milestone_id,
			</if>
			<if test="referenceMilestoneId != null">
				reference_milestone_id,
			</if>
			<if test="referenceOperationId != null">
				reference_operation_id,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="sequenceNumber != null">
				sequence_number,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="version != null">
				#{version,jdbcType=BIGINT},
			</if>
			<if test="milestoneId != null">
				#{milestoneId,jdbcType=BIGINT},
			</if>
			<if test="referenceMilestoneId != null">
				#{referenceMilestoneId,jdbcType=BIGINT},
			</if>
			<if test="referenceOperationId != null">
				#{referenceOperationId,jdbcType=BIGINT},
			</if>
			<if test="score != null">
				#{score,jdbcType=BIGINT},
			</if>
			<if test="sequenceNumber != null">
				#{sequenceNumber,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation">
		update test_paper_operation
		<set>
			<if test="version != null">
				version = #{version,jdbcType=BIGINT},
			</if>
			<if test="milestoneId != null">
				milestone_id = #{milestoneId,jdbcType=BIGINT},
			</if>
			<if test="referenceMilestoneId != null">
				reference_milestone_id =
				#{referenceMilestoneId,jdbcType=BIGINT},
			</if>
			<if test="referenceOperationId != null">
				reference_operation_id =
				#{referenceOperationId,jdbcType=BIGINT},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=BIGINT},
			</if>
			<if test="sequenceNumber != null">
				sequence_number = #{sequenceNumber,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation">
		update
		test_paper_operation
		set version = #{version,jdbcType=BIGINT},
		milestone_id = #{milestoneId,jdbcType=BIGINT},
		reference_milestone_id =
		#{referenceMilestoneId,jdbcType=BIGINT},
		reference_operation_id =
		#{referenceOperationId,jdbcType=BIGINT},
		score =
		#{score,jdbcType=BIGINT},
		sequence_number =
		#{sequenceNumber,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<delete id="deleteTestPaperOperationByMilestoneId"
		parameterType="java.lang.Long">
		delete from
		test_paper_operation
		where milestone_id =
		#{mileStoneId,jdbcType=BIGINT}
	</delete>
	<select id="selectTestTemplateOperationBymileStoneId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		test_paper_operation
		where milestone_id =
		#{mileStoneId,jdbcType=BIGINT}
	</select>

		<insert id="saveTestPaperOperation"
			parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation">

			insert into
			test_paper_operation
			(
			version,
			milestone_id,
			reference_milestone_id,
			reference_operation_id,
			score,
			sequence_number
			)
			values
			(
			#{version,jdbcType=BIGINT},
			#{milestoneId,jdbcType=BIGINT},
			#{referenceMilestoneId,jdbcType=BIGINT},
			#{referenceOperationId,jdbcType=BIGINT},
			#{score,jdbcType=BIGINT},
			#{sequence,jdbcType=BIGINT});
		</insert>

	
  <insert id="insertTestPaperOperation" parameterType="java.util.Map" >
    insert into test_paper_operation (version, milestone_id, 
      reference_milestone_id, reference_operation_id, 
      score, sequence_number)
    values (#{version,jdbcType=BIGINT}, #{milestoneId,jdbcType=BIGINT}, 
      #{referenceMilestoneId,jdbcType=BIGINT}, #{referenceOperationId,jdbcType=BIGINT}, 
      #{score,jdbcType=BIGINT}, #{sequenceNumber,jdbcType=BIGINT})
  </insert>
  <select id="selectTestPaperOperationList" parameterType="com.zxtech.esp.vo.vrnewtestpaper.TestPaperOperation" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from test_paper_operation
    where 1=1
	<if test="milestoneId != null and milestoneId != ''">
		and milestone_id = #{milestoneId,jdbcType=BIGINT}
	</if>
	ORDER BY sequence_number DESC
  </select>
  
  <select id="selectTestPaperInfo" resultMap="BaseResultMap">
	SELECT
		t.*, 
		ttm.mile_stone_name,
		tto.operation_name,
		(select count(0) from test_paper_operation t1 where t1.milestone_id=#{mileStoneId,jdbcType=BIGINT} and t1.reference_milestone_id=t.reference_milestone_id) rowNum
	FROM
		test_paper_operation t
	LEFT JOIN test_template_milestone ttm ON t.reference_milestone_id = ttm.id
	LEFT JOIN test_template_operation tto ON t.reference_operation_id = tto.id
	WHERE
		t.milestone_id = #{mileStoneId,jdbcType=BIGINT}
	ORDER BY t.reference_milestone_id ,t.reference_operation_id,t.sequence_number
  </select>
</mapper>